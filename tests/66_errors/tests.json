{
  "tests": [
    {
      "info": "Lexical error (Wrong double format) ",
      "code": "scope \n dim a as double = 19. ",
      "compiler_exit_code": 1
    },
    {
      "info": "Lexical error (Wrong string format)",
      "code": "scope \n !\" end scope",
      "compiler_exit_code": 1
    },



    {
      "info": "Syntax error",
      "code": "scope",
      "compiler_exit_code": 2
    },
    {
      "info": "Syntax error (Expect Scope) ",
      "code": "scope \n end",
      "compiler_exit_code": 2
    },
    {
      "info": "Syntax error (Expect END) ",
      "code": "scope \n scope",
      "compiler_exit_code": 2
    },
    { 
      "info": "Syntax error (Empty program) ",
      "code": "",
      "compiler_exit_code": 2
    },



    { 
      "info": "Semantic error (Using undefined variable) ",
      "code": "scope \n input a \n end scope",
      "compiler_exit_code": 3
    },
    { 
      "info": "Semantic error (Using undefined variable in expression) ",
      "code": "scope \n print a*2; \n end scope",
      "compiler_exit_code": 3
    },
    { 
      "info": "Semantic error (Attempt to redeclaration) ",
      "code": "scope \n dim a as integer \n dim a as integer \n end scope",
      "compiler_exit_code": 3
    },
    {
      "info": "Semantic Error, call undefined function",
      "code": "scope dim a as integer = foo()\n end scope",
      "compiler_exit_code": 3
    },
    {
      "info": "Semantic Error, undefined variable in expression",
      "code": "scope \n dim a as integer \n a = 10 + variable \n end scope",
      "compiler_exit_code": 3
    }
  ]
}